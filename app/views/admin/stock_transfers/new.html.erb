<% content_for :page_title do %>
  <%= link_to t(:stock_transfers), admin_stock_transfers_url %> /
  <%= t(:new_stock_transfer) %>
<% end %>

<script type='text/template' id='transfer_product_template'>
  {{#each products}}
  <tr>
    <td>{{name}}</td>
    <td class='text-center'>{{quantity}}</td>
    <td class='actions actions-1 text-center'>
      <button class='icon_link btn btn-danger btn-sm transfer_remove_product' data-product-id='{{id}}'>
        <span class='fa fa-times' data-product-id='{{id}}'></span>
      </button>
      <input type='hidden' id='product[]' name='product[]' value='{{id}}'>
      <input type='hidden' id='quantity[]' name='quantity[]' value='{{quantity}}'>
    </td>
  </tr>
  {{/each}}
</script>

<%= form_tag admin_stock_transfers_path, :method => :post do %>
  <div class="panel panel-default">
    <div class="panel-heading">
      <h1 class="panel-title">
        <%= t(:transfer_stock) %>
      </h1>
    </div>

    <div class="panel-body">
      <div data-hook="admin_stock_movements_form_fields">
        <div class="form-group" id="stock_movement_reference_field">
          <%= label_tag 'reference', raw("#{t(:reference)} (#{t(:optional)})") %>
          <%= text_field_tag :reference, '', class: 'form-control' %>
        </div>
        <div class="form-group" id="receive_stock_field">
          <div class="checkbox">
            <label for="receive_stock">
              <%= check_box_tag :transfer_receive_stock %>
              <%= t('receive_stock') %>
            </label>
          </div>
        </div>
        <div class="form-group" id="transfer_source_location_id_field">
          <%= label_tag :transfer_source_location_id, t(:source) %>
          <%= select_tag :transfer_source_location_id, {}, class: 'form-control' %>
        </div>
        <div class="form-group" id="transfer_destination_location_id_field">
          <%= label_tag :transfer_destination_location_id, t(:destination) %>
          <%= select_tag :transfer_destination_location_id, {}, class: 'form-control' %>
        </div>
      </div>
    </div>
  </div>

  <div class="panel panel-default" id="add-product-to-transfer">
    <div class="panel-heading">
      <h1 class="panel-title">
        <%= t(:add_product) %>
      </h1>
    </div>

    <div class="panel-body">
      <div class="row">
        <div class="col-md-8">
          <div class="form-group" id="stock_movement_product_id_field">
            <%= label_tag 'product_id', t(:product) %>
            <%#= hidden_field_tag 'transfer_product', {}, {class: 'fullwidth-input'} %>
            <%= select_tag :transfer_product, {}, {class: 'form-control'} %>
          </div>
        </div>

        <div class="col-md-4">
          <div class="form-group" id="stock_movement_quantity_field">
            <%= label_tag :transfer_product_quantity, t(:quantity) %>
            <div class="input-group">
              <%= number_field_tag :transfer_product_quantity, 1, class: 'form-control', min: 0 %>
              <span class="input-group-btn">
                <%= button t(:add), 'plus', 'submit', class: "transfer_add_product" %>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="alert alert-info no-objects-found">
    <%= t(:no_resource_found, resource: I18n.t(:other, scope: 'activerecord.models.spree/product')) %>.
  </div>

  <div id="transfer-products-table" style="display:none">
    <table class="table table-bordered sortable">
      <thead data-hook="transfer_products_header">
      <th><%= t(:name) %></th>
      <th class="text-center"><%= t(:quantity) %></th>
      <th class="actions"></th>
      </thead>
      <tbody id="transfer_products_tbody">

      </tbody>
    </table>
  </div>

  <div class="form-actions" data-hook="buttons">
    <%= button t(:transfer_stock), 'plus transfer_transfer' %>
  </div>
<% end %>

<script type="text/javascript" charset="utf-8">
    var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
        hasProp = {}.hasOwnProperty;

    $(function() {
        var TransferAddProducts, TransferLocations, TransferStockItem, TransferProduct, TransferProducts, transfer_add_products, transfer_locations, transfer_products;
        TransferProduct = (function() {
            function TransferProduct(product1) {
                this.product = product1;
                this.id = this.product.id;
                this.name = this.product.name + " - " + this.product.code;
                this.quantity = 0;
            }

            TransferProduct.prototype.add = function(quantity) {
                return this.quantity += quantity;
            };

            return TransferProduct;

        })();
        TransferStockItem = (function(superClass) {
            extend(TransferStockItem, superClass);

            function TransferStockItem(stock_item) {
                this.stock_item = stock_item;
                TransferStockItem.__super__.constructor.call(this, this.stock_item.product);
                this.count_on_hand = this.stock_item.count_on_hand;
                this.name = this.product.name + " - " + this.product.code + " (" + this.count_on_hand + ")";
            }

            TransferStockItem.prototype.add = function(quantity) {
                this.quantity += quantity;
                if (this.quantity > this.count_on_hand) {
                    return this.quantity = this.count_on_hand;
                }
            };

            return TransferStockItem;

        })(TransferProduct);
        TransferLocations = (function() {
            function TransferLocations() {
                this.source = $('#transfer_source_location_id');
                this.destination = $('#transfer_destination_location_id');
                this.source.change((function(_this) {
                    return function() {
                        return _this.populate_destination();
                    };
                })(this));
                $('#transfer_receive_stock').change((function(_this) {
                    return function(event) {
                        return _this.receive_stock_change(event);
                    };
                })(this));
                $.getJSON('/admin/stock_locations', (function(_this) {
                    return function(data) {
                        var location;
                        _this.locations = (function() {
                            var i, len, ref, results;
                            ref = data.stock_locations;
                            results = [];
                            for (i = 0, len = ref.length; i < len; i++) {
                                location = ref[i];
                                results.push(location);
                            }
                            return results;
                        })();
                        if (_this.locations.length < 2) {
                            _this.force_receive_stock();
                        }
                        _this.populate_source();
                        return _this.populate_destination();
                    };
                })(this));
            }

            TransferLocations.prototype.force_receive_stock = function() {
                $('#receive_stock_field').hide();
                $('#transfer_receive_stock').prop('checked', true);
                return this.toggle_source_location(true);
            };

            TransferLocations.prototype.is_source_location_hidden = function() {
                return $('#transfer_source_location_id_field').css('visibility') === 'hidden';
            };

            TransferLocations.prototype.toggle_source_location = function(hide) {
                if (hide == null) {
                    hide = false;
                }
                this.source.trigger('change');
                if (this.is_source_location_hidden() && !hide) {
                    $('#transfer_source_location_id_field').css('visibility', 'visible');
                    return $('#transfer_source_location_id_field').show();
                } else {
                    $('#transfer_source_location_id_field').css('visibility', 'hidden');
                    return $('#transfer_source_location_id_field').hide();
                }
            };

            TransferLocations.prototype.receive_stock_change = function(event) {
                this.toggle_source_location(event.target.checked);
                return this.populate_destination(!event.target.checked);
            };

            TransferLocations.prototype.populate_source = function() {
                this.populate_select(this.source);
                return this.source.trigger('change');
            };

            TransferLocations.prototype.populate_destination = function(except_source) {
                if (except_source == null) {
                    except_source = true;
                }
                if (this.is_source_location_hidden()) {
                    return this.populate_select(this.destination);
                } else {
                    return this.populate_select(this.destination, parseInt(this.source.val()));
                }
            };

            TransferLocations.prototype.populate_select = function(select, except) {
                var i, len, location, ref;
                if (except == null) {
                    except = 0;
                }
                select.children('option').remove();
                ref = this.locations;
                for (i = 0, len = ref.length; i < len; i++) {
                    location = ref[i];
                    if (location.id !== except) {
                        select.append($('<option></option>').text(location.name).attr('value', location.id));
                    }
                }
                return select.select2();
            };

            return TransferLocations;

        })();
        TransferProducts = (function() {
            function TransferProducts() {
                $('#transfer_source_location_id').change((function(_this) {
                    return function() {
                        return _this.refresh_products();
                    };
                })(this));
            }

            TransferProducts.prototype.receiving_stock = function() {
                return $("#transfer_receive_stock:checked").length > 0;
            };

            TransferProducts.prototype.refresh_products = function() {
                if (this.receiving_stock()) {
                    return this._search_transfer_products();
                } else {
                    return this._search_transfer_stock_items();
                }
            };

            TransferProducts.prototype._search_transfer_products = function() {
                return this.build_select('/admin/products', 'product_name_or_sku_cont');
            };

            TransferProducts.prototype._search_transfer_stock_items = function() {
                var stock_location_id;
                stock_location_id = $('#transfer_source_location_id').val();
                return this.build_select(("/admin/stock_locations/" + stock_location_id + "/stock_items"), 'variant_product_name_or_variant_sku_cont');
            };

            TransferProducts.prototype.format_product_result = function(result) {
                return result.name + " - " + result.code;
            };

            TransferProducts.prototype.build_select = function(url, query) {
                return $('#transfer_product').select2({
                    minimumInputLength: 3,
                    ajax: {
                        url: url,
                        dataType: "json",
                        data: function(term, page) {
                            var query_object;
                            query_object = {};
                            query_object[query] = term;
                            return {
                                q: term
                            };
                        },
                        processResults: function(data, page) {
                            console.log('result');
                            console.log(data);
                            // var result;
                            // result = data["products"] || data["stock_items"];
                            // if (data["stock_items"] != null) {
                            //     result = result.map(function(product) {
                            //         return product.product;
                            //     });
                            // }
                            window.products = data;
                            return {
                                results: data
                            };
                        }
                    }
                });
            };

            return TransferProducts;

        })();
        TransferAddProducts = (function() {
            function TransferAddProducts() {
                this.products = [];
                this.template = Handlebars.compile($('#transfer_product_template').html());
                $('#transfer_source_location_id').change((function(_this) {
                    return function(event) {
                        return _this.clear_products();
                    };
                })(this));
                $('button.transfer_add_product').click((function(_this) {
                    alert('addddddd');
                    return function(event) {
                        event.preventDefault();
                        console.log($('#transfer_product').select2('data'));
                        if ($('#transfer_product').select2('data').length > 0) {
                            return _this.add_product();
                        } else {
                            return alert('Please select a product first');
                        }
                    };
                })(this));
                $('#transfer-products-table').on('click', '.transfer_remove_product', (function(_this) {
                    console.log('remove');
                    return function(event) {
                        event.preventDefault();
                        return _this.remove_product($(event.target));
                    };
                })(this));
                $('button.transfer_transfer').click((function(_this) {
                    alert('wqdsd');
                    return function() {
                        if (!(_this.products.length > 0)) {
                            alert('no products to transfer');
                            return false;
                        }
                    };
                })(this));
            }

            TransferAddProducts.prototype.add_product = function() {
                var quantity, product;
                product = $('#transfer_product').select2('data')[0];
                quantity = parseInt($('#transfer_product_quantity').val());
                product = this.find_or_add(product);
                product.add(quantity);
                return this.render();
            };

            TransferAddProducts.prototype.find_or_add = function(product) {
                var existing;
                if (existing = this.products.find(function (v) {
                        return v.id === product.id
                    })) {
                    return existing;
                } else {
                    product = new TransferProduct($.extend({}, product));
                    this.products.push(product);
                    return product;
                }
            };

            TransferAddProducts.prototype.remove_product = function(target) {
                var v, product_id;
                product_id = parseInt(target.data('productId'));
                this.products = (function() {
                    var i, len, ref, results;
                    ref = this.products;
                    results = [];
                    for (i = 0, len = ref.length; i < len; i++) {
                        v = ref[i];
                        if (v.id !== product_id) {
                            results.push(v);
                        }
                    }
                    return results;
                }).call(this);
                return this.render();
            };

            TransferAddProducts.prototype.clear_products = function() {
                this.products = [];
                return this.render();
            };

            TransferAddProducts.prototype.contains = function(id) {
                return _.contains(_.pluck(this.products, 'id'), id);
            };

            TransferAddProducts.prototype.render = function() {
                var rendered;
                if (this.products.length === 0) {
                    $('#transfer-products-table').hide();
                    return $('.no-objects-found').show();
                } else {
                    $('#transfer-products-table').show();
                    $('.no-objects-found').hide();
                    rendered = this.template({
                        products: this.products
                    });
                    return $('#transfer_products_tbody').html(rendered);
                }
            };

            return TransferAddProducts;

        })();
        if ($('#transfer_source_location_id').length > 0) {
            transfer_locations = new TransferLocations;
            transfer_products = new TransferProducts;
            return transfer_add_products = new TransferAddProducts;
        }
    });
</script>
